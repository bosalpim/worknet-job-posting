name: Staging Deploy To AWS Lambda

on:
  push:
    branches:
      - staging-*

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: [ '3.2.0' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Generate Environment Variables File for Staging
        run: |
          echo "DB_HOST_STAGING=$DB_HOST_STAGING" >> .env.staging
          echo "DB_PASSWORD_STAGING=$DB_PASSWORD_STAGING" >> .env.staging
          echo "WORKNET_API_KEY=$WORKNET_API_KEY" >> .env.staging
          echo "GOOGLE_PROJECT_ID=$GOOGLE_PROJECT_ID" >> .env.staging
          echo "GOOGLE_CLIENT_EMAIL=$GOOGLE_CLIENT_EMAIL" >> .env.staging
          echo "GOOGLE_PRIVATE_KEY=$GOOGLE_PRIVATE_KEY" >> .env.staging
          echo "NAVER_API_KEY_ID=$NAVER_API_KEY_ID" >> .env.staging
          echo "NAVER_API_KEY=$NAVER_API_KEY" >> .env.staging
          echo "NAVER_SEARCH_API_KEY=$NAVER_SEARCH_API_KEY" >> .env.staging
          echo "KAKAO_REST_API_KEY=$KAKAO_REST_API_KEY" >> .env.staging
          echo "KAKAO_BIZMSG_PROFILE=$KAKAO_BIZMSG_PROFILE" >> .env.staging
          echo "AMPLITUDE_STAGING=$AMPLITUDE_STAGING" >> .env.staging
          echo "FCM_APP_PUSH_AUTHORIZATION=$FCM_APP_PUSH_AUTHORIZATION" >> .env.staging
          echo "BEX_API_URL=$BEX_STAGING_API_URL" >> .env.staging
          echo "SLACK_DEV_ALERT_URL=$SLACK_DEV_ALERT_URL" >> .env.staging
          echo "NEWSPAPER_JOB_QUEUE_URL=$NEWSPAPER_JOB_QUEUE_URL" >> .env.staging
          echo "SLACK_NOTI_NEWSPAPER_URL=$SLACK_NOTI_NEWSPAPER_URL" >> .env.staging
          echo "FIREBASE_ADMIN_JSON" >> .eng.staging

        env:
          DB_HOST_STAGING: ${{ secrets.DB_HOST_STAGING }}
          DB_PASSWORD_STAGING: ${{ secrets.DB_PASSWORD_STAGING }}
          WORKNET_API_KEY: ${{ secrets.WORKNET_API_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          NAVER_API_KEY_ID: ${{ secrets.NAVER_API_KEY_ID }}
          NAVER_API_KEY: ${{ secrets.NAVER_API_KEY }}
          NAVER_SEARCH_API_KEY: ${{ secrets.NAVER_SEARCH_API_KEY }}
          KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
          KAKAO_BIZMSG_PROFILE: ${{ secrets.KAKAO_BIZMSG_PROFILE }}
          AMPLITUDE_STAGING: ${{ secrets.AMPLITUDE_STAGING }}
          FCM_APP_PUSH_AUTHORIZATION: ${{ secrets.FCM_APP_PUSH_AUTHORIZATION }}
          BEX_STAGING_API_URL: ${{ secrets.BEX_STAGING_API_URL }}
          SLACK_DEV_ALERT_URL: ${{ secrets.SLACK_DEV_ALERT_URL }}
          NEWSPAPER_JOB_QUEUE_URL: ${{ secrets.NEWSPAPER_JOB_QUEUE_STAG_URL }}
          SLACK_NOTI_NEWSPAPER_URL: ${{ secrets.SLACK_TEST_WEBHOOK_URL }}
          FIREBASE_ADMIN_JSON: ${{ secrets.FIREBASE_ADMIN_JSON }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2


      - name: Jets deploy
        env:
          JETS_ENV: staging
        run: echo y | bundle exec jets deploy


      - name: Action Slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          author_name: STAGING Deployment
          fields: repo,message,commit,author,action,eventName,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required